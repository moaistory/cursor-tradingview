//@version=5
indicator("Bollinger Band Pivot Detector", overlay=true)

// 볼린저 밴드 설정
bb_length = input.int(20, title="볼린저 밴드 기간", minval=1)
bb_mult = input.float(2.0, title="볼린저 밴드 표준편차", minval=0.001, maxval=50, step=0.1)

// 볼린저 밴드 계산
bb_basis = ta.sma(close, bb_length)
bb_dev = bb_mult * ta.stdev(close, bb_length)
bb_upper = bb_basis + bb_dev
bb_lower = bb_basis - bb_dev

// 볼린저 밴드 그리기
plot(bb_basis, color=color.blue, title="중간선", linewidth=2)
p1 = plot(bb_upper, color=color.red, title="상단선", linewidth=2)
p2 = plot(bb_lower, color=color.green, title="하단선", linewidth=2)
fill(p1, p2, color=color.new(color.blue, 90), title="밴드 영역")

// 볼린저 밴드 터치 확인
upper_touch = high >= bb_upper
lower_touch = low <= bb_lower

// 피벗 조건 정의
// 상단 피벗: 상단에 터치 후 하락 반전
upper_pivot = upper_touch[1] and close < open and close < bb_upper

// 하단 피벗: 하단에 터치 후 상승 반전
lower_pivot = lower_touch[1] and close > open and close > bb_lower

// 연속 터치 방지 (최소 3봉 간격)
var int bars_since_upper_touch = 0
var int bars_since_lower_touch = 0

if upper_touch
    bars_since_upper_touch := 0
else
    bars_since_upper_touch := bars_since_upper_touch + 1

if lower_touch
    bars_since_lower_touch := 0
else
    bars_since_lower_touch := bars_since_lower_touch + 1

// 최종 피벗 조건 (3봉 이상 간격)
valid_upper_pivot = upper_pivot and bars_since_upper_touch >= 3
valid_lower_pivot = lower_pivot and bars_since_lower_touch >= 3

// 피벗 레벨 저장
var float upper_pivot_level = na
var float lower_pivot_level = na

if valid_upper_pivot
    upper_pivot_level := high[1]

if valid_lower_pivot
    lower_pivot_level := low[1]

// 피벗 레벨 그리기
plot(upper_pivot_level, title="상단 피벗", color=color.red, linewidth=2, style=plot.style_line)
plot(lower_pivot_level, title="하단 피벗", color=color.green, linewidth=2, style=plot.style_line)

// 시각적 표시
// 배경색
bgcolor(valid_upper_pivot ? color.new(color.red, 80) : na, title="상단 피벗 신호")
bgcolor(valid_lower_pivot ? color.new(color.green, 80) : na, title="하단 피벗 신호")

// 화살표 표시
plotshape(valid_upper_pivot, title="상단 피벗", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.normal)
plotshape(valid_lower_pivot, title="하단 피벗", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.normal)

// 터치 표시
plotshape(upper_touch, title="상단 터치", location=location.abovebar, color=color.orange, style=shape.circle, size=size.tiny)
plotshape(lower_touch, title="하단 터치", location=location.belowbar, color=color.purple, style=shape.circle, size=size.tiny)

// 정보 표시
var table info_table = table.new(position.top_right, 2, 6, bgcolor=color.white, border_width=1)
if barstate.islast
    table.cell(info_table, 0, 0, "인디케이터", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 0, "볼린저 피벗 감지", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 0, 1, "상단 피벗 조건", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 1, "상단 터치 + 음봉 + 밴드내", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 0, 2, "하단 피벗 조건", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 2, "하단 터치 + 양봉 + 밴드내", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 0, 3, "상단 피벗 레벨", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 3, str.tostring(upper_pivot_level, "#.##"), text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 0, 4, "하단 피벗 레벨", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 4, str.tostring(lower_pivot_level, "#.##"), text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 0, 5, "현재 상태", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 5, upper_touch ? "상단 터치" : lower_touch ? "하단 터치" : "정상", text_color=color.black, bgcolor=color.gray) 